services:
  postgres:
    image: postgres:alpine
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .env.example
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - wholeapp
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"
        ]
      interval: 1s
      timeout: 5s
      retries: 10

  ollama:
    container_name: ollama
    # pull_policy: always
    # tty: true
    restart: unless-stopped
    # image: ollama/ollama
    build:
      dockerfile: ollama.Dockerfile
    ports:
      - ${OLLAMA_PORT}:11434
    networks:
      - wholeapp
    env_file:
      - .env.example
    environment:
      - OLLAMA_HOST=0.0.0.0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
  app:
    depends_on:
      - postgres
      - ollama
    build:
      dockerfile: Dockerfile
      args:
        STREAMLIT_PORT: ${STREAMLIT_PORT}
    container_name: app
    env_file:
      - .env.example
    environment:
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    networks:
      - wholeapp
    ports:
      - ${STREAMLIT_PORT}:${STREAMLIT_PORT}
    volumes:
      - ./chroma_langchain_db:/app/chroma_langchain_db

networks:
  wholeapp:
